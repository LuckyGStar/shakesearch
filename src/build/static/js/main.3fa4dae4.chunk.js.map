{"version":3,"sources":["components/SearchForm/SearchForm.js","components/Notification/Notification.js","components/TableItem/TableItem.js","components/Table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","getPosts","useState","query","setQuery","handleSubmit","event","a","preventDefault","trim","className","onSubmit","htmlFor","type","name","placeholder","value","onChange","target","Notification","message","TableItem","post","Table","posts","map","App","setMessage","setPosts","fetch","toLowerCase","res","json","results","status","length","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qXAGaA,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAChBC,mBAAS,IADO,mBACnCC,EADmC,KAC5BC,EAD4B,KAEpCC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAME,iBACNP,EAASE,EAAMM,QAFI,2CAAH,sDAKlB,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBACEA,UAAU,eACVC,SAAUN,EAFZ,UAIE,uBAAOO,QAAQ,QAAf,mBACA,sBAAKF,UAAU,qBAAf,UACE,uBACEG,KAAK,OACLC,KAAK,QACLC,YAAY,SACZC,MAAOb,EACPc,SAAU,SAACX,GAAD,OAAWF,EAASE,EAAMY,OAAOF,UAE7C,wBAAQH,KAAK,SAAb,+BCxBCM,G,MAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,mBAAGV,UAAU,UAAb,SAAwBU,MCFfC,G,YAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAE1B,OACE,oBAAIZ,UAAU,mBAAd,SAAiC,4BAAIY,QCD5BC,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEtB,OACE,qBAAKd,UAAU,YAAf,SACE,uBAAOA,UAAU,QAAjB,SACE,uBAAOA,UAAU,cAAjB,SACGc,GAASA,EAAMC,KAAI,SAAAH,GAAI,OACtB,cAAC,EAAD,CAAWA,KAAMA,cCyBdI,MA5Bf,WAAgB,IAAD,EACiBxB,mBAAS,IAD1B,mBACNkB,EADM,KACGO,EADH,OAEazB,mBAAS,IAFtB,mBAENsB,EAFM,KAECI,EAFD,KAIP3B,EAAQ,uCAAG,WAAOE,GAAP,iBAAAI,EAAA,+EAEKsB,MAAM,aAAD,OAAc1B,EAAMM,OAAOqB,gBAFrC,cAEPC,EAFO,gBAGSA,EAAIC,OAHb,OAGPC,EAHO,OAIM,MAAfF,EAAIG,QACNN,EAASK,GACTN,EAAW,GAAD,OAAIM,EAAQE,OAAZ,qBAEVR,EAAW,sBARA,kDAWbS,QAAQC,IAAR,MAXa,0DAAH,sDAed,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CAAYT,SAAUA,IACtB,cAAC,EAAD,CAAcmB,QAASA,IACvB,cAAC,EAAD,CAAOI,MAAOA,QCnBLc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3fa4dae4.chunk.js","sourcesContent":["import \"./SearchForm.css\";\nimport { useState } from \"react\";\n\nexport const SearchForm = ({ getPosts }) => {\n  const [query, setQuery] = useState('');\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    getPosts(query.trim());\n  };\n\n  return (\n    <div className=\"search\">\n      <div className=\"container\">\n        <form\n          className=\"search__form\"\n          onSubmit={handleSubmit}\n        >\n          <label htmlFor=\"query\">Query</label>\n          <div className=\"search__form--body\">\n            <input\n              type=\"text\"\n              name=\"query\"\n              placeholder=\"Search\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n            <button type=\"submit\">Search</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import \"./Notification.css\";\n\nexport const Notification = ({ message }) => {\n  return (\n    <p className=\"message\">{message}</p>\n  )\n}\n","import \"./TableItem.css\";\n\nexport const TableItem = ({ post }) => {\n\n  return (\n    <tr className=\"table__body--row\"><p>{post}</p></tr>\n  )\n\n}\n","import \"./Table.css\";\n\nimport { TableItem } from \"../TableItem/TableItem\";\n\nexport const Table = ({ posts }) => {\n\n  return (\n    <div className=\"container\">\n      <table className=\"table\">\n        <tbody className=\"table__body\">\n          {posts && posts.map(post =>\n            <TableItem post={post} />\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n\n}\n","import \"./App.css\";\nimport { useState } from \"react\";\n\n// components\nimport { SearchForm } from './components/SearchForm/SearchForm';\nimport { Notification } from './components/Notification/Notification';\nimport { Table } from './components/Table/Table';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [posts, setPosts] = useState('');\n\n  const getPosts = async (query) => {\n    try {\n      const res = await fetch(`/search?q=${query.trim().toLowerCase()}`);\n      const results = await res.json();\n      if (res.status === 200) {\n        setPosts(results);\n        setMessage(`${results.length} results found!`);\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <SearchForm getPosts={getPosts} />\n      <Notification message={message} />\n      <Table posts={posts} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}